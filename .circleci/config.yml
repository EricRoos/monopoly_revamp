# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
         environment:
          RAILS_DB_USERNAME: root
          RAILS_DB_PASSWORD: ''
          RAILS_DB_HOST: 127.0.0.1
          RAILS_ENV: test
          
       - image: circleci/mysql:5.7-ram
         environment:
          MYSQL_USER: root
          MYSQL_DB: monopoly_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/monopoly

    steps:
      - checkout
      - setup_remote_docker:
          version: 18.03.1-ce

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: precompile
          command: |
            bundle exec rake assets:precompile

      - run:
          name: 'test env vars'
          command: 
            echo $TEST_VALUE
      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - run:
          name: 'build docker image'
          command: |
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            echo $RAILS_MASTER_KEY >> config/master.key
            docker build -f Dockerfile.production . -t ericroos13/monopoly_revamp:latest
            docker push ericroos13/monopoly_revamp:latest
            
      - run:
          name: 'deploy'
          command: |
            ssh -o StrictHostKeyChecking=no socialdj@159.89.228.107 ./update_server
